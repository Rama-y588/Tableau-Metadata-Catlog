=================================================
Execution Guide for Tableau Application
=================================================

This guide provides a clear and concise walkthrough for executing the Tableau Application. It covers basic startup instructions, directory structure, configuration requirements, and output file locations.

-------------------------------------------------
1. Basic Execution
-------------------------------------------------
Follow these steps to quickly run the application:

1. Open your terminal or command prompt.

2. Navigate to the root directory of the project:
   > cd Tableau_application

3. Execute the main Python application:
   > python src/main.py

-------------------------------------------------
2. Detailed Execution Guide
-------------------------------------------------

2.1 Project Directory Structure
-------------------------------
Ensure your project is organized as follows:

Tableau_application/
├── app/
│   └── data/
│       ├── temp/         # Temporary output files
│       └── metadata/     # Metadata files
├── config/
│   └── file_paths.yaml   # Configuration file with paths
├── src/
│   └── main.py           # Entry point of the application
└── README.md

2.2 Configuration File Validation
----------------------------------
Before execution, confirm that the configuration file exists and is properly configured:

> File Path: config/file_paths.yaml

Expected content:

    csv_paths:
      data_folder_path: "app\data"
      temp_subfolder_name: "temp"

    metadata_paths:
      data_folder_path: "app\data"
      metadata_subfolder_name: "metadata"

✔ Double-check that these folder names match the actual folders in your project.

2.3 Output File Destination
----------------------------
All files generated by the application will be saved in:

    Tableau_application/app/data/temp/

This location is constructed using the following configuration values:
csv_paths:
- data_folder_path: app/data
- temp_subfolder_name: temp

-------------------------------------------------
3. Additional Notes
-------------------------------------------------
- Ensure Python 3.13 or higher is installed on your system.
- Use a virtual environment to manage dependencies and avoid conflicts.
